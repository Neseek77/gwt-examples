#summary test out wiki stuff

{{{
private byte[] getImageBytes_v2(BlobData blobData) {
    if (blobData == null || blobData.getKey() == null) {
      return null;
    }

    BlobKey blobKey = new BlobKey(blobData.getKey());
    
    FileService fileService = FileServiceFactory.getFileService();
    AppEngineFile file = null;
    try {
      file = fileService.getBlobFile(blobKey);
    } catch (FileNotFoundException e) {
      log.severe("getImageBytes_V2(): Error: fileService error " + e.toString());
      e.printStackTrace();
    }
    
    if (file == null) {
      return null;
    }
    
    FileReadChannel ch = null;
    try {
      ch = fileService.openReadChannel(file, false);
    } catch (FileNotFoundException e) {
      log.severe("getImageBytes_V2(): Error: file not found " + e.toString());
      e.printStackTrace();
    } catch (LockException e) {
      log.severe("getImageBytes_V2(): Error: lock exception " + e.toString());
      e.printStackTrace();
    } catch (IOException e) {
      log.severe("getImageBytes_V2(): Error: file read channel - io exception " + e.toString());
      e.printStackTrace();
    }
    
    if (ch == null) {
      return null;
    }
    
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    long checkSum = 0L;
    try {
      byte[] barray = new byte[1024];
      ByteBuffer bb = ByteBuffer.wrap(barray);
      int nRead;
      while ((nRead=ch.read(bb)) != -1) {
        for (int i=0; i < nRead; i++) {
          checkSum += barray[i];
          out.write(barray[i]);
        }
        bb.clear();
      }
    } catch (IOException e) {
      log.severe("getImageBytes_V2(): Error: io exception reading " + e.toString());
      e.printStackTrace();
    }
    
    log.info("getImageBytes_V2(): info: long checkSum=" + checkSum);

    byte[] filebytes = out.toByteArray();
    
    return filebytes;
  }
}}}