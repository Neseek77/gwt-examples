#summary eclipse docs v2

= Table of Contents = 
<wiki:toc max_depth="2"/>

= Eclipse =

= Install =
 
== Ubuntu Linux ==
 * 0. Install Java Jdk. I like using OpenJDK for Eclipse. I run GWT in ia32-sun-jre.
 * 1. [http://www.eclipse.org/downloads/ Download Eclipse]
 * 2. Extract eclipse into a directory like /opt/eclipse
 * 3. Create eclipse launcher shortcut for desktop.

 installing java
{{{
 sudo apt-get install openjdk-6-jre

 # for 64bit systems, you will also need to run GWT in 32 jre vm 
 sudo apt-get install ia32-sun-java6-bin
}}}

== Microsoft Windows ==
 * 0. [http://java.sun.com/javaee/downloads/index.jsp?intcmp=1282 Download Java] Install Java SDK 
 * 1. [http://www.eclipse.org/downloads/ Download Eclipse]
 * 2. Extract into directory like C:\archive\eclipse
 * 3. Create shortcut for desktop of eclipse.exe

== Recommendations ==
 * I recommend starting with *Eclipse for Java Developers EE* download. You can install more features later that you may desire with software updates.

= Software Updates =

== SVN - Subversion ==
 * 1. Help > Software Updates > Available Software > Ganymede > Collaboration Tools > Subversion SVN Team Provider
 * 2. Help > Software Updates > Available Software > Add Site > [http://www.polarion.org/projects/subversive/download/eclipse/2.0/ganymede-site/ SVN Connectors]
 * 3. Update Site Polarion.org > (Check) Subversion SVN Connectors, (Check) SVNkit 1.2.0
 * 4. Window > Prefrences > (type filter SVN) > Team > SVN > SVN Connector > *Select SVN Kit 1.2.0* - A connector method has to be selected to connect to a SVN repository.

== Code Metrics ==
 How many lines of code have you written for your application? How is your code?
 * [http://metrics.sourceforge.net/ metrics site]
 * [http://metrics.sourceforge.net/update Metrics Update Site]

=== Share Project ===
 Share your eclipse GWT project with multiple computers and developers.
 * 1. (Right Click on Project Name) > Team > Share Project > (follow steps)

=== Import Project From Respository === 
 * 1. File > New Other > (type filter SVN) > SVN Projects From SVN > (Enter URL), (Enter Username), (Enter Password)
 * URLs: https://gwt-examples.googlecode.com/svn/trunk/ username:googleAccount,  password:sourcePassword
 * URLs: svn+ssh://192.168.12.81/srv/svn username:computerAccount, password:computerAccount
 * 2. Select Resource > trunk > (selct project to import)
 * 3. If the code base is not setup yet as an eclipse project, you will have to select Java Project as the new project. 

=== Create SVN Repository ===
 
==== Linux ====
 * reference Ubuntu: [https://help.ubuntu.com/community/Subversion Ubuntu SVN Info]
{{{
sudo mkdir /home/svn
cd /home/svn
sudo mkdir myproject
sudo chown -R www-data myproject
sudo chgrp -R subversion myproject
sudo chmod -R g+rws myproject
sudo svnadmin create /home/svn/myproject
}}}

= Proxy =
 For intranet proxies in corporations.
 * 1. Window > Prefrences > (type filter Proxy) > General > Network Connections > Setup your intranet proxy

= GWT Project Debugging =

== On a 64bit System ==
 On a 64bit operating system, you will need to configure an alternate JRE to test your gwt application with. 
 * 1. (Right Click on Project) > Debug As > Debug Configurations > Java Application > ProjectName > JRE > Installed JREs > Add > (ubuntu linux: /usr/lib/jvm/ia32...)

== Larger Memory Space For Debugging ==
 GWT project creation now sets this.
 * 1. (Right Click on Project) > Debug As > Debug Configurations > Java Application > ProjectName > Arguments > Arguments > VM arguments > -Xmx256

= External Jar Libraries =
 Adding external libraries onto your gwt project can increase the funcationality for both the client and the server side. Keep in mind that adding jars and using there classes don't always work for the client side.
 * 1. (Right Click on Project) > Build Path > Libraries > Add External Jars