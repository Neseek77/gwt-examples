#summary How to configure eclipse for these projects.
#labels Featured

= Eclipse FAQs =


== Project Import ==
  # You can import these projects into your Eclipse.org IDE. SVN URL: http://gwt-examples.googlecode.com/svn/trunk/
  # Once imported, change your project's build path to the correct libraries. Change the build path library for gwt-linux home directory. I set mine to /opt/gwt-linux which is linked to the current Google Web toolkit download that I have.
  # Open the debug dialog in eclipse and look for java application. Select the gwt application and hit debug.


== JDBC Connector ==
 If you want to use this project's mysql jdbc connector make sure you have it in */opt/gwt-linux*. /opt/gwt-linux/mysql-connector-java-5.0.8-bin.jar
 Or change the build path by right clicking on the eclipse project, select "Build Path", then change or add the mysql jdb connectory library.
 # Get JConnector MySQL JDBC [http://dev.mysql.com/downloads/connector/j/5.1.html Link To MySQL]
 # Eclipse > Right Click Project > Build Path > Libraries Tab > Add External Jar > Add /opt/gwt-linux/mysql-connector-java-5.0.8-bin.jar

== GWT Home Directory ==
 If you want to use my build path from this project install GWT to */opt/gwt-linux*. Or  right click on the eclipse project and select "Build Path", and change the library to the correct location for your GWT Home directory.
 === Setting Enviromental Variable GWT_HOME ===
  If you want to use a enviromental variable
  # Edit /etc/enviroment (sudo gedit /etc/enviroment)
  # Add this
{{{
GWT_HOME="/opt/gwt-linux" 
}}}
  # Or Add it to ~/.profile
{{{
 export GWT_HOME="/opt/gwt-linux" 
}}}
  # Test it in bash/shell
{{{
echo $GWT_HOME
}}}


== GWT_EXTERNAL_BROWSER ==

 How to add GWT External Browser envirotmental variable for Eclipse.

 # Edit /etc/enviroment (sudo gedit /etc/enviroment)
 # Add this
{{{
GWT_EXTERNAL_BROWSER="/usr/local/firefox32/firefox"
}}}
 # or add it to ~/.profile (user home directory)
{{{
export GWT_EXTERNAL_BROWSER="/usr/local/firefox32/firefox"
}}}
 # Test it in bash/shell
{{{
echo $GWT_EXTERNAL_BROWSER
}}}

== 32bit JVM ==
 You will need use a 32bit JVM in your build path / Referenced Libaries to work with GWT.

 # Change or add a 32bit JVM here
 Eclipse > Window (Top Menu) > Preferences > Java > Installed JREs > 

== Problems GWT and AMD64 ==

 Get this error trying to run a GWT project?
{{{
/gwt-linux/libswt-pi-gtk-3235.so: wrong ELF class: ELFCLASS32 (Possible cause: architecture word width mismatch)
}}}

  This Error comes from running 64bit JVM and then GWT tries to use 32bit compiled libraries.

=== Changing the default JVM ===
 # Install ia32-sun-java6-bin (install 32bit JVM)
 # Install galternatives (this is how we will change the default JVM)
 # Run galternatives
 # Find Java in the List and choose the ia32 JVM

{{{
#Ubuntu method of getting galterantives
sudo apt-get galternatives

#Another way to do it in shell
sudo update-alternatives --config java
}}}

 OR

 # Change or Add 
  Eclipse > Window (Top Menu) > Preferences > Java > Installed JREs > 

=== Eclipse Memory ===
Are you getting a eclipse out of memory error? 

Change your file "/usr/lib/eclipse/eclipse.ini". This will change the startup parameters.
{{{
#eclipse.ini file - changes start up parameters
-vmargs
-Xms512m
-Xmx1024m
-XX:PermSize=128m
-XX:MaxPermSize=512m
}}}

Or 

Change the way it start up with /usr/bin/eclipse
{{{
#/usr/bin/eclipse - bottom of file
exec /usr/lib/eclipse/eclipse \
    -vm "${JAVACMD}" \
    -install "${INSTALL}" \
    -startup "${STARTUP}" \
    ${CMDLINEARGS} \
    -vmargs -Djava.library.path=/usr/lib/jni \
            -Dgnu.gcj.precompiled.db.path=/var/lib/gcj-4.2/classmap.db \
            -Dgnu.gcj.runtime.VMClassLoader.library_control=never \
            -Dosgi.locking=none ${VMARGS} \
    -XX:PermSize=1024M -XX:MaxPermSize=1024M
#ADD -> -XX:PermSize=1024M -XX:MaxPermSize=1024M
}}}